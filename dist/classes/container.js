"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Container=void 0;const tslib_1=require("tslib"),discord_js_1=tslib_1.__importStar(require("discord.js")),lodash_1=tslib_1.__importDefault(require("lodash"));class Container{data={fetchReply:!1,ephemeral:!1,attachments:[],components:[],content:null,embeds:[],files:[]};replyType="send";instance=null;constructor(){}reset(){this.data=(new Container).data}setInstance(e){return this.instance=e,this}addEmbed(e){return this.data.embeds.push(new discord_js_1.EmbedBuilder(e)),this}addRow(){return this.data.components.push(new discord_js_1.ActionRowBuilder),this}addButton(e,t=-1){return this.data.components.at(t).components.push(new discord_js_1.ButtonBuilder(e)),this}addMenu(e,t,s=-1){return this.data.components.at(s).components.push(new discord_js_1.default[e+"SelectMenuBuilder"](t)),this}async send({content:e=this.data.content,ins:t=this.instance}={},s=!0){return t&&(this.data.content=e,e=null,t instanceof discord_js_1.BaseInteraction?(t instanceof discord_js_1.AutocompleteInteraction?e=t.respond([]).catch(lodash_1.default.noop):("reply"!=this.replyType&&(this.replyType="reply"),t.isRepliable()&&t.deferred&&(this.replyType="editReply")),e=await t[this.replyType]?.(this.data).catch(lodash_1.default.noop)):t instanceof discord_js_1.Message?e=await t["edit"==this.replyType?"edit":"reply"](this.data).catch(lodash_1.default.noop):(t instanceof discord_js_1.User||t instanceof discord_js_1.GuildMember||t instanceof discord_js_1.TextChannel)&&(e=await t.send(this.data).catch(lodash_1.default.noop)),s&&this.reset(),e)||null}}exports.Container=Container;