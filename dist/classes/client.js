"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AkitaClient=void 0;const tslib_1=require("tslib"),member_remove_1=tslib_1.__importDefault(require("../handlers/member_remove")),member_add_1=tslib_1.__importDefault(require("../handlers/member_add")),interaction_1=tslib_1.__importDefault(require("../handlers/interaction")),interpreter_1=require("./interpreter"),message_1=tslib_1.__importDefault(require("../handlers/message")),midou_ts_1=require("midou.ts"),discord_js_1=require("discord.js"),utils_1=require("./utils"),process_1=require("process");class AkitaClient extends discord_js_1.Client{timeouts=new midou_ts_1.Timeouts({restore:!0});interpreter=new interpreter_1.Interpreter;prefixes=null;cbs={};commands=[];constructor(e,r){super(e),this.prefixes=Array.isArray(r)?r:[r],this.timeouts.on("expires",async e=>{await this.resolve(e.data.code,{metadata:{vars:e.data.data}},this)}),this.timeouts.start(),this.on("ready",e=>{this.interpreter.parse("$log[DEBUG;Bot Ready as $data[client;user;tag]!!]",void 0,e),setTimeout(()=>this.isReady()||console.log("CLIENT CAN NOT START!".bgRed),1e4)}),this.on("functionError",(e,r)=>{console.log(`${"InternalError".bgRed} ${"in".gray} ${(r.func?.total||"unknown").bgRed}${":".gray}
    ${">".gray} `+(e.stack||"Without Stack").gray)})}async resolve(e,r,t=this){return this.interpreter.parse(e,r,t)}readyCommand(e){return this.on("ready",()=>{this.resolve(e,void 0,this)})}onFunctionError(t){return this.removeAllListeners("functionError"),this.on("functionError",(e,r)=>{r.metadata.vars.error=e,this.resolve(t,r,this)})}onGuildMemberAdd(){return this.on("guildMemberAdd",e=>{(0,member_add_1.default)(e,this)})}onGuildMemberRemove(){return this.on("guildMemberRemove",e=>{(0,member_remove_1.default)(e,this)})}onMessageCreate(r){return this.on("messageCreate",e=>{(0,message_1.default)(e,this,r)})}onInteractionCreate(){return this.on("interactionCreate",e=>{(0,interaction_1.default)(e,this)})}addCommand(e){return e.type=e.type.trim().toUpperCase().replace(/ +/g,"_"),e.names=Array.isArray(e.names)?e.names:[e.names],console.log(`${"DEBUG".bgBlack} ${"-> Loaded".gray} ${e.names[0].bgWhite} ${"as".gray} ${e.type.bgWhite}!`),this.commands.push(e),this}addCommands(e){return e.forEach(e=>this.addCommand(e)),this}loadCommands(e,r=(0,process_1.cwd)()){utils_1.Utils.LoadFiles(e,r).then(e=>{e.forEach(e=>{try{var r=require(e.name);for(const t of Array.isArray(r)?r:[r])this.addCommand(t)}catch(r){console.log(`${"LoaderError".bgRed} ${"in".gray} ${(e.name||"unknown").bgRed}${":".gray}
    ${">".gray} `+(r.stack||"Without Stack").gray)}})})}getCommands(r,t,e="find"){return this.commands[e](e=>e.type===r&&e.names?.includes(t))}addCallback(e,r){this.cbs[e]=r}}exports.AkitaClient=AkitaClient;