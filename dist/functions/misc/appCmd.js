"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const builder_1=require("../../classes/builder"),utils_1=require("../../classes/utils");exports.data={data:(new builder_1.FunctionBuilder).setName("appCmd").setValue("description","...").setValue("use","$appCmd[method;...params?]").setValue("fields",[{name:"method",type:'"create" | "edit" | "delete"'},{name:"...params",type:"[object<applicationCommandData>, guildId?] | [applicationCommandResolvable, object<applicationCommandData>, guildId?] | [applicationCommandResolvable, object<applicationCommandData>]"}]).setValue("example","None").setValue("returns","Unknown"),code:async e=>{e.func.resolve_fields(e);let[a,...t]=e.interpreter.fields(e),i;if("create"==a){try{Number(t.at(-1))&&(d=t.pop()),l=JSON.parse(t.join(";"))}catch{return utils_1.Utils.Warn("Invalid JSON provided",e,!0)}i=await e.client.application?.commands.create(l,d)}else if("edit"==a){try{var l,d;Number(t.at(-1))&&(d=t.pop()),l=JSON.parse(t.slice(1).join(";"))}catch{return utils_1.Utils.Warn("Invalid JSON provided",e,!0)}i=await e.client.application?.commands.edit(t[0],l,d)}else"delete"==a&&(i=await e.client.application?.commands.delete(t[0],t[1]));return{code:e.code.replace(e.func.id,i||"")}}};