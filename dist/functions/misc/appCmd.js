"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const builder_1=require("../../classes/builder"),utils_1=require("../../classes/utils");exports.data={data:(new builder_1.FunctionBuilder).setName("appCmd").setValue("description","...").setValue("use","$appCmd[method;...params?]").setValue("fields",[{name:"method",type:'"create" | "edit" | "delete"'},{name:"...params",type:"[object<applicationCommandData>, guildId?] | [applicationCommandResolvable, object<applicationCommandData>, guildId?] | [applicationCommandResolvable, object<applicationCommandData>]"}]).setValue("example","None").setValue("returns","Unknown"),code:async function(e){await this.resolveFields();let[t,...a]=this.fields.split(!0),i="undefined";if("create"==t){try{var s=void 0;Number(a.at(-1))&&(s=a.pop()),l=utils_1.Utils.Object(a.join(";"))}catch{return this.warn("Invalid JSON provided")}i=await this.data.client.application?.commands.create(l,s)}else if("edit"==t){try{var l,s=void 0;Number(a.at(-1))&&(s=a.pop()),l=utils_1.Utils.Object(a.slice(1).join(";"))}catch{return this.warn("Invalid JSON provided")}i=await this.data.client.application?.commands.edit(a[0],l,s)}else"delete"==t&&(i=await this.data.client.application?.commands.delete(a[0],a[1]));return this.makeReturn(i)}};