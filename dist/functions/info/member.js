"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const builder_1=require("../../classes/builder"),utils_1=require("../../classes/utils"),lodash_1=require("lodash");exports.data={data:(new builder_1.FunctionBuilder).setName("member").setValue("description","find a member and get properties").setValue("use","$member[guild;resolvable;properties?]").setValue("fields",[{name:"guild",type:"snowflake<guild>"},{name:"resolvable",type:"string"},{name:"properties",type:"string",optional:!0}]).setValue("example","$member[Pavez;user;id]").setValue("returns","Unknown"),code:async function(){await this.resolveFields();var[e="self",t,...i]=this.fields.split(!0);return(e="self"===e.toLowerCase()?this.data.metadata.ctx.getGuild():this.data.client.guilds.cache.get(e))?(e=await utils_1.Utils.findMember(e,t))?(t=i[0]?.startsWith("invoke:")?await utils_1.Utils.Invoke(this,i.shift(),i,e):(0,lodash_1.get)(e,i.join(".")||"id"),this.makeReturn(t)):this.makeReturn("undefined"):this.warn("invalid guild id provided")}};