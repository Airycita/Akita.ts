"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const builder_1=require("../../classes/builder"),utils_1=require("../../classes/utils"),lodash_1=require("lodash");exports.data={data:(new builder_1.FunctionBuilder).setName("var").setValue("description","add or get a variable").setValue("use","$var[key;value?;type?]").setValue("fields",[{name:"key",description:"property to get/set",type:"string"},{name:"value",description:"the value to be given to the variable",type:"any"},{name:"type",description:"the variable force type `(default: unknown)`",type:'"unknown" | "string" | "number" | "bigint" | "regexp" | "json"'}]).setValue("example",'$var[str;hi, im a string] // string var\n$var[num;4] // number var\n$var[obj;{ "leif": "erikson" }] // object var').setValue("returns","String"),code:async function(){await this.resolveFields();var e=this.fields.split(!0);let[t,i]=e;return t.startsWith("invoke:")?(i=await utils_1.Utils.Invoke(this,t,e.slice(1),this.meta),this.makeReturn(i)):((0,lodash_1.isNil)(i)||this.setVariable(t,utils_1.Utils.Types(this.data,[i])),this.makeReturn(this.variable(t)))}};