"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const tslib_1=require("tslib"),builder_1=require("../../classes/builder"),utils_1=require("../../classes/utils"),lodash_1=tslib_1.__importDefault(require("lodash"));exports.data={data:(new builder_1.FunctionBuilder).setName("replace").setValue("description","...").setValue("use","$replace[text;pattern;replacer]").setValue("fields",[{name:"text",type:"string"},{name:"pattern",type:"string | regexp"},{name:"replacer",type:"string | void"}]).setValue("example","$replace[hello mid;hello;uwu]").setValue("returns","Void"),code:async a=>{await a.func.resolve_fields(a);let[r,l,s]=a.interpreter.fields(a);if(r.startsWith("var:")){var e=r.slice(4),t=lodash_1.default.get(a.metadata.vars,e);if("string"!=typeof t)return utils_1.Utils.Warn(`Variable ${e.bgYellow} is not a string`,a);r=t}if(/\/(.*?)\/(.+|)/g.test(l)&&(e=l.split("/"),l=new RegExp(e[1],e[2])),s.startsWith("run:")){let e=s.slice(4),t=a.client.cbs[e];return t?(r=await r.asyncReplace(l,async(...r)=>{var e=await a.interpreter.parse(t.trim().replace(/\$(\d+)/g,(e,t)=>r[Number(t)-1]),a,a.client);return e?.metadata?.yield||e?.code||""}),{code:a.code?.replace(a.func.id,r)}):utils_1.Utils.Warn(`callback ${e.bgYellow} does not exists`,a)}return{code:a.code?.replace(a.func.id,r.replace(l,s))}}};