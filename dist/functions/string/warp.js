"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const tslib_1=require("tslib"),builder_1=require("../../classes/builder"),utils_1=require("../../classes/utils"),lodash_1=tslib_1.__importDefault(require("lodash"));function warp(e,t,a){return e.length>t?e.slice(0,t)+a:e}exports.data={data:(new builder_1.FunctionBuilder).setName("warp").setValue("description","limit the size of a string if necessary").setValue("use","$warp[string;limit;ellipsis?]").setValue("fields",[{name:"string",type:"string"},{name:"limit",type:"number"},{name:"ellipsis",description:"`(default: ...)`",type:"string"}]).setValue("example","$warp[totbl its the best;5] // totbl...\n//$warp[var:key;...] for variables, this mutates the variable").setValue("returns","String"),code:async e=>{e.func=await e.func.resolve_fields(e);let[t,a,s="..."]=e.interpreter.fields(e);var r;return t.startsWith("var:")?(t=t.slice(4),"string"!=typeof(r=lodash_1.default.get(e.metadata.vars,t))?utils_1.Utils.Warn(`Variable ${t.bgYellow} is not a string`,e):(lodash_1.default.set(e.metadata.vars,t,lodash_1.default.upperCase(r)),{code:e.code?.replace(e.func.id,lodash_1.default.get(e.metadata.vars,warp(t,Number(a)||0,s)))})):{code:e.code?.replace(e.func.id,warp(t,Number(a)||0,s))}}};