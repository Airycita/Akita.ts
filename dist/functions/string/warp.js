"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const builder_1=require("../../classes/builder");function warp(e,t,i){return e.length>t?e.slice(0,t)+i:e}exports.data={data:(new builder_1.FunctionBuilder).setName("warp").setValue("description","limit the size of a string if necessary").setValue("use","$warp[string;limit;ellipsis?]").setValue("fields",[{name:"string",type:"string"},{name:"limit",type:"number"},{name:"ellipsis",description:"`(default: ...)`",type:"string"}]).setValue("example","$warp[totbl its the best;5] // totbl...\n//$warp[var:key;...] for variables, this mutates the variable").setValue("returns","String"),code:async function(){await this.resolveFields();let[e,t,i="..."]=this.fields.split(!0);return e.startsWith("var:")?(e=e.slice(4),"string"!=typeof this.variable(e)?this.warn(`Variable ${e.bgYellow} is not a string`):this.makeReturn(this.setVariable(e,warp(e,Number(t)||0,i)))):this.makeReturn(warp(e,Number(t)||0,i))}};