"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const builder_1=require("../../classes/builder"),utils_1=require("../../classes/utils"),lodash_1=require("lodash");exports.data={data:(new builder_1.FunctionBuilder).setName("addStringMenu").setValue("description","add a string select menu component at the instance.").setValue("use","$addStringMenu[placeholder?;customId;disabled?;options;minValues?;maxValues?]").setValue("fields",[{name:"placeholder",description:"Placeholder text if nothing is selected.",type:"string[max_length=150]",optional:!0},{name:"customId",description:"Custom identifier for the menu.",type:"string[max_length=100]"},{name:"options",description:"Specified choices for the menu.",type:"[SelectMenuComponentOptionData](https://discord.com/developers/docs/interactions/message-components#select-menu-object-select-option-structure)[]"},{name:"disabled",description:"Whether the menu is disabled `(default: false)`.",type:"boolean",optional:!0},{name:"minValues",description:"Minimum number of options that must be chosen `(default: 1)`.",type:"number[0,25]",optional:!0},{name:"maxValues",description:"Maximum number of options that can be chosen `(default: 1)`.",type:"number[1,25]",optional:!0}]).setValue("example",'$addStringMenu[select some;menu_1;[{\n\tlabel: "no. 1",\n\tvalue: "option_1"\n}, {\n\tlabel: "no. 2",\n\tvalue: "option_2"}]]').setValue("returns","Void"),code:async function(){await this.resolveFields();let[e,t,s,n="false",i=1,o=1]=this.fields.split(!0);return 0==(0,lodash_1.startsWith)(s,"[")&&(s&&="["+s),0==(0,lodash_1.endsWith)(s,"]")&&(s&&=s+"]"),s=utils_1.Utils.Object(s),this.meta.ctn.addStringMenu({disabled:utils_1.Utils.booleanify(n),minValues:Number(i),maxValues:Number(o),placeholder:e,customId:t,options:s}),this.makeReturn("")}};