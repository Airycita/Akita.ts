"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.data=void 0;const tslib_1=require("tslib"),builder_1=require("../../classes/builder"),utils_1=require("../../classes/utils"),lodash_1=tslib_1.__importDefault(require("lodash"));async function Condition(e,t,i){return t=await e.interpreter.parse(t,e,e.client),lodash_1.default.merge(e,t),e.code=i,utils_1.Utils.condition(t.code)}exports.data={data:(new builder_1.FunctionBuilder).setName("while").setValue("description","like javascript while").setValue("use","$while[condition;code;doWhileStyle?]").setValue("fields",[{name:"condition",type:"string<interpretableCode<boolean>>"},{name:"code",type:"string<interpretableCode>"},{name:"doWhileStyle",type:"boolean",optional:!0}]).setValue("example","$var[n;0]\n$var[x;0]\n$while[3>n;\n\t$var[n;$math[$var[n]+1]]\n\t$var[x;$math[$var[x]+$var[n]]]\n]").setValue("returns","Void"),code:async e=>{await e.interpreter._(e.func);var[t,i,a="false"]=e.interpreter.fields(e),r=e.code;if(utils_1.Utils.booleanify(a))do{var l=await e.interpreter.parse(i,e,e.client)}while(lodash_1.default.merge(e,l),e.code=r,await Condition(e,t,r));else for(;await Condition(e,t,r);){var n=await e.interpreter.parse(i,e,e.client);lodash_1.default.merge(e,n),e.code=r}return e.break=!1,{code:e.code.replace(e.func.id,e.metadata.yields[e.func.id]||"")}}};